@font-face {
  font-family: "the10thdayfont";
  src: url({{ "/assets/fonts/FarnhamDisplay-Regular.c8c674c.woff" | relative_url }}) format('woff');
}

/** html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}*/

body {
    background-color: #13001C;
    color: #fff;
    font-kerning: normal;
    font-family: "the10thdayfont",serif;
    font-weight: 400;
}
html, body {
    max-height: 800px;
    overflow: scroll;
    max-width: 100%;
    overflow-x: hidden;
    width:100%;
    height:100%;
}
/** Canvas for java boundries **/

canvas{
  display:block;
  vertical-align:bottom;
}

  /* ---- particles.js container ---- */

#particles-js {
  width: 100%;
  height: 100%;
  position: fixed;
  background-color: #13001C;
  background-image: url('');
  background-size: cover;
  background-position: 50% 50%;
  background-repeat: no-repeat;
}
/** end **/


.wrapper {
  width: 80%;
  position: relative;
  margin: 0 auto;
  top: 30%;
  padding: 20px 20px;
  z-index: 100;
  background: transparent;
}

/** this controls the content to stay on top of the particles **/

.body-particles {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 100;
}

/** all other contents are controled here **/


.headline {
  margin: 20px;
  color: #fff;
  font-size: 2rem;
  text-align: center;
  z-index: 200;
}

a {
  color: #fff;
  text-decoration: none;
}
.readnow a{
  text-decoration: none;
  border-bottom: 1px;
  border-color: #fff;
  margin-left: 200px;
}

/**  Button Styling **/
.button-holder {
  display: block;
  position: relative;
  text-align: center;
  background: transparent;
  z-index: 100;
  margin-top: 30px;
}
.button {
  display: block;
  position: relative;
  display: inline-block;
  border: 1px solid currentColor;
  border-color: #FFFFFF;
  color: #FFFFFF;
  text-align: center;
  font-size: 1rem;
  padding: 10px;
  width: 100px;
  transition: all 0.5s;
  cursor: pointer;
  background: transparent;
  z-index: 100;
  border-radius: 4px;
}

.button:hover {
  background-color: #fff;
  border-radius: 4px;
  color: black;
}

/** Top bar**/

.site-header {
  width: 100%;
  padding: 0 0;
  display: block;
}
.site-title {
  visibility: hidden;
}

.site-nav {}
.trigger {
  position: absolute;
  top: 36px;
  right: 3rem;
  text-transform: uppercase; 
}
.page-link:hover {
  color: gray;
}
.logo {
  position: absolute;
  left: 3rem;
  top: 30px;
  max-width: 200px;
  width: auto;
}

@media only screen and (max-width: 500px) {

}

.story {
  text-align: center;
  font-family: inherit;
  font-size: 1.1rem;
  background: transparent;
}

.story p {line-height: 150%;}

/** page navigation **/
.PageNavigation {
  bottom:0;
  position:fixed;
  z-index:150;
  height:35px;
  display: flex;
  width: 100%;
  margin-left: 0 auto;
  flex-flow: row wrap;
  padding: 60px 9% 20px;
  justify-content: space-between;
  background-image: linear-gradient(0deg,#13001C,rgb(19,0,28,0));
  cursor: pointer;
}
/*hsla(37,87%,97%,0)*/
/**.PageNavigation a {
  display: block;
  float: left;
  margin: 1em 0;
}**/

.next {
  position: fixed;
  bottom: 40px;
  right: 3rem;
  text-align: right;
  display: inline-block;
  letter-spacing: 2.002px;
  vertical-align: baseline;
}

.prev {
  text-align: left;
  display: inline-block;
  position: fixed;
  bottom: 40px;
  left: 3rem;
  letter-spacing: 2.002px;
  vertical-align: baseline;
}

.home {
  background: #fff;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  position: fixed;
  left: 50%;
  margin-left: -10px;
  bottom: 40px;
}

.home:hover {
  background: red;
}

/** Javascripts **/

.spark {
    background-color: #DE4A00;
    font-family: 'Helvetica', sans-serif;
    visibility: hidden;
    position: absolute;
    width: 4px;
    height: 4px;
    border-radius: 30%;
    box-shadow: 0 0 5px #AB000B;
}

.text-js{
  display: block;
  background: transparent;
  z-index: 200;
  opacity: 0;
  font-size: 1.2rem;
}
.cursor{
  display: block;
  position: absolute;
  height: 100%;
  top: 0;
  right: -5px;
  width: 2px;
  /* Change colour of Cursor Here */
  background-color: white;
  z-index: 1;
  animation: flash 0.5s none infinite alternate;
}
@keyframes flash{
  0%{
    opacity: 1;
  }
  100%{
    opacity: 0;
  }
}





// Rest of CSS (Purely for this pen)
@import url('https://fonts.googleapis.com/css?family=Open+Sans:300,400');


.headline{
  display: block;
  background: transparent;
  z-index: 200;
  color: white;
  font-size: 0.3rem;
  text-align: center;
  font-family: inherit;
  p {
    letter-spacing: 1.6px;
    font-weight: 300;
  }
}


/*Impress JS all css codes*/

/*Hint for using keyboard to navigate*/

.hint {
    /*
        We hide the hint until presentation is started and from browsers not supporting
        impress.js, as they will have a linear scrollable view ...
    */
    display: none;

    /*
        ... and give it some fixed position and nice styles.
    */
    position: fixed;
    left: 0;
    right: 0;
    bottom: 200px;

    background: rgba(0,0,0,0.5);
    color: #EEE;
    text-align: center;

    font-size: 50px;
    padding: 20px;

    z-index: 100;

    /*
        By default we don't want the hint to be visible, so we make it transparent ...
    */
    opacity: 0;

    /*
        ... and position it below the bottom of the screen (relative to it's fixed position)
    */
    -webkit-transform: translateY(400px);
    -moz-transform:    translateY(400px);
    -ms-transform:     translateY(400px);
    -o-transform:      translateY(400px);
    transform:         translateY(400px);

    /*
        Now let's imagine that the hint is visible and we want to fade it out and move out
        of the screen.

        So we define the transition on the opacity property with 1s duration and another
        transition on transform property delayed by 1s so it will happen after the fade out
        on opacity finished.

        This way user will not see the hint moving down.
    */
    -webkit-transition: opacity 1s, -webkit-transform 0.5s 1s;
    -moz-transition:    opacity 1s,    -moz-transform 0.5s 1s;
    -ms-transition:     opacity 1s,     -ms-transform 0.5s 1s;
    -o-transition:      opacity 1s,      -o-transform 0.5s 1s;
    transition:         opacity 1s,         transform 0.5s 1s;
}

/*Fallback checks if a browser is supported*/

.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}

/*Presentation step*/
.step {
    position: relative;
    width: 900px;
    padding: 40px;
    margin: 20px auto;

    -webkit-box-sizing: border-box;
    -moz-box-sizing:    border-box;
    -ms-box-sizing:     border-box;
    -o-box-sizing:      border-box;
    box-sizing:         border-box;

    font-family:  "the10thdayfont",serif;
    font-size: 48px;
    line-height: 1.5;
}
/*Impress step*/

.impress-enabled .step {
    margin: 0;
    opacity: 0.3;

    -webkit-transition: opacity 1s;
    -moz-transition:    opacity 1s;
    -ms-transition:     opacity 1s;
    -o-transition:      opacity 1s;
    transition:         opacity 1s;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled          { pointer-events: none }
.impress-enabled #impress { pointer-events: auto }
